#!/bin/bash
# Don't use 'set -e' - we want to generate a report even if there are issues
set -u  # Error on undefined variables

echo "🐕 Generating final analysis report..."

# Check if analysis completed successfully
ANALYSIS_FAILED="false"
if [ -z "${SEVERITY:-}" ] || [ "${SEVERITY}" = "" ]; then
  echo "⚠️ Claude analysis may have failed - using fallback values"
  SEVERITY="unknown"
  ACTION_TAKEN="analysis_failed"
  ANALYSIS_FAILED="true"
fi

# Create comprehensive report with error handling
cat > .watchdog/final-report.md << EOF
# 🐕 Claude Code Watchdog Analysis Report

**Workflow:** ${GITHUB_WORKFLOW:-unknown}
**Run:** [${GITHUB_RUN_ID:-unknown}](${GITHUB_SERVER_URL:-unknown}/${GITHUB_REPOSITORY:-unknown}/actions/runs/${GITHUB_RUN_ID:-unknown})
**Timestamp:** $(date -u +%Y-%m-%dT%H:%M:%SZ)

## Analysis Results
- **Severity:** ${SEVERITY:-unknown}
- **Action Taken:** ${ACTION_TAKEN:-none}
- **Issue Number:** ${ISSUE_NUMBER:-N/A}
- **PR Number:** ${PR_NUMBER:-N/A}
- **Tests Passing:** ${TESTS_PASSING:-unknown}
$([ "$ANALYSIS_FAILED" = "true" ] && echo "- **Status:** ⚠️ Analysis encountered errors - results may be incomplete")

## Context Summary
$([ -f ".watchdog/context-summary.json" ] && cat .watchdog/context-summary.json | jq -r 'to_entries | map("- **\(.key | gsub("_"; " ") | ascii_upcase):** \(.value)") | join("\n")' || echo "No context summary available")

## Failure Analysis
$([ -f ".watchdog/failure-analysis.json" ] && cat .watchdog/failure-analysis.json | jq -r 'to_entries | map("- **\(.key | gsub("_"; " ") | ascii_upcase):** \(.value)") | join("\n")' || echo "No failure analysis available")

## Available Artifacts
- Context data: \`.watchdog/\` directory
- Test files: $([ -f ".watchdog/test-files.txt" ] && wc -l < .watchdog/test-files.txt || echo "0") files found
- Recent runs: $([ -f ".watchdog/recent-runs.json" ] && jq length .watchdog/recent-runs.json || echo "0") runs analyzed

EOF

# Add actual cost data to report
echo "" >> .watchdog/final-report.md
echo "## 💰 Actual Cost" >> .watchdog/final-report.md
echo "- **Input tokens:** ${INPUT_TOKENS:-'N/A'}" >> .watchdog/final-report.md
echo "- **Output tokens:** ${OUTPUT_TOKENS:-'N/A'}" >> .watchdog/final-report.md
echo "- **Cache read:** ${CACHE_READ_TOKENS:-'N/A'}" >> .watchdog/final-report.md
echo "- **Cache write:** ${CACHE_WRITE_TOKENS:-'N/A'}" >> .watchdog/final-report.md
echo "- **Total cost:** ${TOTAL_COST:-'N/A'}" >> .watchdog/final-report.md
echo "- **Turns used:** ${TURNS_USED:-'N/A'}" >> .watchdog/final-report.md
echo "- **Configuration:** create_fixes=$CREATE_FIXES, rerun_tests=$RERUN_TESTS" >> .watchdog/final-report.md

echo "" >> .watchdog/final-report.md
echo "---" >> .watchdog/final-report.md
echo "*Generated by Claude Code Watchdog v0.2*" >> .watchdog/final-report.md

# Console summary
echo "📊 Analysis Summary:"
echo "   - Severity: $SEVERITY"
echo "   - Action taken: $ACTION_TAKEN"

if [ -n "$ISSUE_NUMBER" ] && [ "$ISSUE_NUMBER" != "" ]; then
  echo "   - Issue: #$ISSUE_NUMBER"
fi

if [ -n "$PR_NUMBER" ] && [ "$PR_NUMBER" != "" ]; then
  echo "   - PR: #$PR_NUMBER"
fi

if [ "$TESTS_PASSING" == "true" ]; then
  echo "   - ✅ Tests now passing after fixes!"
elif [ "$TESTS_PASSING" == "false" ]; then
  echo "   - ❌ Tests still failing after attempted fixes"
fi

echo "🐕 Analysis complete! Report saved to artifacts."
echo ""

# Cost summary
if [ -n "$TOTAL_COST" ] && [ "$TOTAL_COST" != "" ]; then
  echo "💰 Actual cost: $TOTAL_COST USD"
  echo "📊 Tokens: ${INPUT_TOKENS}in/${OUTPUT_TOKENS}out"
else
  echo "💰 Estimated cost: ~\$0.30-\$0.80 USD (varies by complexity)"
fi

echo "📋 See full breakdown in analysis report artifact"